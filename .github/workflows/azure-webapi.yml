name: Build, Test and Deploy ASP.Net Core app

on:
  push:
    branches: [ main ]
    paths:
      - 'NewsApi/**'
      - 'NewsApi.Tests/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: |
          cd NewsApi
          dotnet restore
          cd ../NewsApi.Tests
          dotnet restore
          
      - name: Build
        run: |
          cd NewsApi
          dotnet build --configuration Release --no-restore
          cd ../NewsApi.Tests
          dotnet build --configuration Release --no-restore
        
      - name: Run Tests
        run: |
          cd NewsApi.Tests
          dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
        
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: NewsApi.Tests/TestResults/
          retention-days: 30

      # Only deploy if tests pass
      - name: Publish API
        if: success()
        run: |
          cd NewsApi
          dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ntnewsapi'
          publish-profile: ${{ secrets.AZUREWEBAPP_PUBLISHPROFILE }}
          package: .